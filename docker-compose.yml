# Docker Compose file for testing logto.
name: symbols-full-stack

version: '3.9'

services:
  # Main Application
  app:
    depends_on:
      postgres:
        condition: service_healthy
      logto:
        condition: service_started
      s3:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    expose:
      - 3000
    entrypoint: ['sh', '-c', 'pnpm prisma db push --accept-data-loss && node build/index.js']
    environment:
      - POSTGRES_URL=postgres://postgres:p0stgr3s@postgres:5432/default
      - POSTGRES_URL_NON_POOLING=postgres://postgres:p0stgr3s@postgres:5432/default
      - POSTGRES_PRISMA_URL=postgres://postgres:p0stgr3s@postgres:5432/default
      - S3_BUCKET_NAME=minio
      - S3_ENDPOINT_URL=http://localhost:9000
      - S3_CDN_URL=http://localhost:9000
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=minio123
      - S3_REGION=us-east-1
      - PUBLIC_LOGTO_ENDPOINT=http://localhost:3001

  # Minio for S3
  s3:
    image: minio/minio
    ports:
      - 9000:9000
    command: server /data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - .temp/data:/data

  # Logto for authentication
  logto:
    depends_on:
      postgres:
        condition: service_healthy
    image: svhd/logto:${TAG-latest}
    entrypoint: ['sh', '-c', 'npm run cli db seed -- --swe && npm start']
    ports:
      - 3001:3001
      - 3002:3002
    expose:
      - 3001
      - 3002
    environment:
      - TRUST_PROXY_HEADER=1
      - DB_URL=postgres://postgres:p0stgr3s@postgres:5432/logto
      - NODE_ENV=test
      - ENDPOINT
      - ADMIN_ENDPOINT

  # Postgres
  postgres:
    image: postgres:15-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p0stgr3s
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
